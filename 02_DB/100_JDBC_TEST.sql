-- JDBC

--부서명을 입력 받아
--해당 부서에 존재하는 사원의
--사번, 이름, 급여, 부서명을 
--사번 오름차순으로 조회 

SELECT EMP_ID, EMP_NAME, SALARY, DEPT_TITLE
FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
WHERE DEPT_TITLE = '총무부'
ORDER BY EMP_ID;

-- null 입력 시 
-- 해결 방법1: 상황에 따른 SQL 구문 조립 -> 이클립스 jdbc1 - edu.kh.jdbc.dao - SelectDepartmentTitleDAO
-- 해결 방법2: SQL을 바꾸는 방법
SELECT * FROM (
   SELECT EMP_ID, EMP_NAME, SALARY, NVL(DEPT_TITLE, 'null') DEPT_TITLE
   FROM EMPLOYEE 
   LEFT JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
   ORDER BY EMP_ID )
WHERE DEPT_TITLE = 'null';

SELECT EMP_ID, EMP_NAME, JOB_NAME, SALARY
FROM EMPLOYEE
JOIN JOB USING (JOB_CODE)
WHERE SALARY BETWEEN '2000000' AND'4000000' 
ORDER BY SALARY DESC; 

-- 5. 사원 정보 추가
-- 사번 생성을 위한 시퀀스 (223번 시작)
CREATE SEQUENCE SEQ_EMP_ID
START WITH 223 --223번 시작
INCREMENT BY 1 --1씩 증가
NOCYCLE -- 반복 없음
NOCACHE; -- 미리 만들어 두는 번호 없음

-- SEQ_EMP)ID.NEXTVAL : 다음 번호 생성
-- SEQ_EMP_ID.CURRVAL : 현재 번호 조회

UPDATE EMPLOYEE 
SET EMAIL = ?, PHONE = ?, SALARY = ?
WHERE EMP_ID = ? ;

SELECT EMP_ID, EMP_NAME, PHONE, SALARY, EMAIL
FROM EMPLOYEE
WHERE EMP_ID = 223;

UPDATE EMPLOYEE 
SET ENT_YN = 'Y', ENT_DATE = SYSDATE
WHERE EMP_ID = ? ;

SELECT EMP_ID, EMP_NAME, ENT_YN, ENT_DATE 
FROM EMPLOYEE WHERE EMP_ID = 223;


SELECT EMP_ID, EMP_NAME, DEPT_TITLE, JOB_NAME, SALARY, PHONE
FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN JOB USING (JOB_CODE)
WHERE ENT_YN = 'N'
ORDER BY JOB_CODE;

SELECT EMP_ID, EMP_NAME, PHONE, EMAIL, ENT_DATE
FROM EMPLOYEE
WHERE ENT_YN = 'Y'
ORDER BY ENT_DATE ;

SELECT EMP_ID, EMP_NAME , DEPT_TITLE , JOB_NAME , SALARY, PHONE, EMAIL, HIRE_DATE, DECODE(ENT_YN, 'N','재직중','Y','퇴사')
FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN JOB USING (JOB_CODE)
WHERE EMP_ID = ?;

---------------------------4번 사원 정보 추가
CREATE SEQUENCE SEQ_EMP_ID2
START WITH 223 --223번 시작
INCREMENT BY 1 --1씩 증가
NOCYCLE -- 반복 없음
NOCACHE; -- 미리 만들어 두는 번호 없음

-- SEQ_EMP)ID.NEXTVAL : 다음 번호 생성
-- SEQ_EMP_ID.CURRVAL : 현재 번호 조회
--------------------------------------------
UPDATE EMPLOYEE 
SET EMAIL = ?, PHONE = ?, SALARY = ?, BONUS = ?
WHERE EMP_ID = ? ;

SELECT EMP_ID, EMP_NAME, PHONE, SALARY, EMAIL, BONUS, ENT_DATE, ENT_YN  
FROM EMPLOYEE;

DELETE FROM EMPLOYEE
WHERE EMP_ID = ?;

ROLLBACK;

